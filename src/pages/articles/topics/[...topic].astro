---
import { getCollection, type CollectionEntry } from "astro:content";
import { TITLE } from "astro:env/client";
import { SEO } from "astro-seo";

import BaseLayout from "layouts/BaseLayout.astro";
import { slugify } from "utils/slugify";
import topics from "data/topics";
import ContentList from "components/Content/ContentList.astro";

interface Props {
  name: string;
  summary: string;
  meta_description: string;
  articles: CollectionEntry<"articles">[];
}

export async function getStaticPaths() {
  const articles = await getCollection("articles");

  const paths = topics.map((topic) => {
    const topicArticles = articles
      .filter((article) => slugify(article.data.topic) === slugify(topic.name))
      .sort(
        (a, b) => b.data.publishDate.valueOf() - a.data.publishDate.valueOf()
      );

    return {
      params: { topic: slugify(topic.name) },
      props: {
        ...topic,
        articles: topicArticles,
      },
    };
  });

  return paths;
}

const { topic } = Astro.params;
const { name, summary, meta_description, articles } = Astro.props;
---

<SEO title={`${TITLE} - Discusses ${name}`} description={meta_description} />
<BaseLayout>
  <section class="topic-header">
    <span>[<a href="/articles/topics">View All Topics</a>]</span>
    <div class="topic-metadata">
      <h1>{name}</h1>
      <p>{summary}</p>
    </div>
  </section>
  <ContentList title={`${topic}-articles`} ` items={articles} />
</BaseLayout>
<style lang="scss">
  .topic-header {
    display: flex;
    flex-direction: column;
    margin-block-end: 1rem;
  }

  .topic-metadata {
    display: grid;
    grid-template-columns: repeat(2, 1fr);

    @media (max-width: 48rem) {
      grid-template-columns: 1fr;
    }
  }
</style>
