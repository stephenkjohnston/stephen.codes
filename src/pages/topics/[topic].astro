---
import Layout from "layouts/Layout.astro";
import { SITE_TITLE } from "astro:env/client";
import { SEO } from "astro-seo";
import topicsData from "data/topics.json";
import { getCollection, type CollectionEntry } from "astro:content";
import type { Topics } from "types/Topic.types";
import ArticlePreview from "components/ArticlePreview.astro";
type Article = CollectionEntry<"articles">;

export async function getStaticPaths() {
  const articles = await getCollection("articles");
  return articles.map((article: Article) => ({
    params: {
      topic: article.data.tag,
    },
  }));
}

const { topic } = Astro.params;
const articles = await getCollection("articles");
const sortedArticles = articles.sort(
  (a, b) =>
    new Date(b.data.pubDate).getTime() - new Date(a.data.pubDate).getTime()
);
const topics: Topics = topicsData;
const currentTopic = topics[topic] ?? undefined;
---

{
  currentTopic && (
    <SEO
      title={`${SITE_TITLE} - Discusses ${currentTopic.title}`}
      description={currentTopic.meta.description}
    />
  )
}
<Layout>
  <section class="topic__header">
    <a href="/topics/" class="topic__link" aria-label="View All Topics"
      >[View All Topics]</a
    >
    <div class="topic__metadata">
      <h1>{currentTopic.title}</h1>
      <p>{currentTopic.summary}</p>
    </div>
  </section>
  <div class="articles">
    {articles.map((article) => <ArticlePreview article={article} />)}
  </div>
</Layout>
<style lang="scss">
  .topic__header {
    display: flex;
    flex-direction: column;
    margin-block-end: 1rem;
  }

  .topic__metadata {
    display: grid;
    grid-template-columns: repeat(2, 1fr);

    @media (max-width: 48rem) {
      grid-template-columns: 1fr;
    }
  }
</style>
