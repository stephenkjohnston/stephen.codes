---
import { type CollectionEntry } from "astro:content";
type ContentItem<T extends "articles" | "kilobits"> = CollectionEntry<T>;
import formatDate from "utils/formatDate";

interface Props<T extends "articles" | "kilobits"> {
  item: ContentItem<T>;
}

const { item } = Astro.props as Props<"articles" | "kilobits">;
const { publishDate, title } = item.data;

const topicOrLanguage =
  "topic" in item.data ? item.data.topic : item.data.language;
const topicLink =
  "topic" in item.data
    ? `/articles/topics/${item.data.topic.toLowerCase()}`
    : `/kilobits/${item.data.language}`;
---

<article class="content-list-item">
  <time>
    {formatDate(publishDate)}
  </time>
  <h3>
    <a href={`/${item.collection}/${item.id}`}>{title}</a>
  </h3>
  <span>
    &lt;<a href={topicLink}>{topicOrLanguage}</a>&gt;
  </span>
</article>
<style lang="scss">
  .content-list-item {
    display: grid;
    grid-template-areas: "date topic" "title title";
    grid-template-columns: auto 1fr;

    @media (min-width: 48rem) {
      grid-template-areas: "date title topic";
      grid-template-columns: 7.5rem auto 7.5rem;
      align-items: center;
      gap: 1rem;
    }

    time {
      grid-area: date;
    }

    h3 {
      margin: 0;
      text-align: left;
      grid-area: title;
    }

    span {
      grid-area: topic;
      text-align: right;
      text-transform: uppercase;

      @media (min-width: 48rem) {
        text-align: center;
      }
    }
  }
</style>
