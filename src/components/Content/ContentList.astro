---
import { type CollectionEntry } from "astro:content";
import ContentListItem from "./ContentListItem.astro";

// Define a generic type for the component
type ContentItems<T extends "articles" | "kilobits"> = CollectionEntry<T>;

interface Props<T extends "articles" | "kilobits"> {
  title?: string;
  link?: string;
  items: ContentItems<T>[];
}

// Use the generic type for the props
const { title, link, items } = Astro.props as Props<"articles" | "kilobits">;
---

<section class="content-list">
  {
    title && (
      <header>
        <h2>#{title}</h2>
        {link && (
          <span>
            [<a href={link}>view all</a>]
          </span>
        )}
      </header>
    )
  }
  <div class="content-list-headings">
    <span>Date</span>
    <span>Title</span>
    <span>Topic</span>
  </div>
  <div class="content-list-items">
    {
      Array.isArray(items) &&
        items.length > 0 &&
        items.map((item) => <ContentListItem item={item} />)
    }
  </div>
</section>
<style lang="scss">
  .content-list {
    display: flex;
    margin-block-end: 1rem;
    flex-direction: column;
    max-width: 48rem;

    header {
      display: flex;
      justify-content: space-between;
      align-items: center;
      position: relative;

      h2 {
        margin: 0;
        text-transform: lowercase;
      }

      a {
        padding-inline: 0.25rem;
      }
    }
  }

  .content-list-items {
    display: flex;
    margin-block-start: 0.8725rem;
    flex-direction: column;
    gap: 1rem;
  }

  .content-list-headings {
    display: none;

    span {
      position: relative;
      display: flex;
      align-items: center;
      border-top: 2px dashed var(--clr-gray-100);
      border-bottom: 2px dashed var(--clr-gray-100);
      line-height: 2.5;

      &:first-child {
        padding-inline-start: 10px;
      }

      &::before,
      &::after {
        position: absolute;
        content: "+|+";
        word-wrap: break-word;
        width: 1ch;
        display: block;
        line-height: 1.29;
        background: var(--clr-gray-10);
      }

      &:nth-child(2n) {
        &::before,
        &::after {
          content: "";
        }
      }

      &::before {
        top: -12px;
        left: -1px;
      }

      &::after {
        bottom: -12px;
        right: -12px;
        line-height: 1.35;
      }

      &:last-child {
        justify-content: center;

        &::before {
          left: -12px;
        }

        &::after {
          bottom: -12px;
          right: -1px;
          line-height: 1.35;
        }
      }
    }

    @media (min-width: 48rem) {
      margin-block-start: 0.375rem;
      grid-template-areas: "date title topic";
      grid-template-columns: 7.5rem auto 7.5rem;
      align-items: center;
      gap: 1rem;
      font-weight: var(--fw-700);
      display: grid;
    }
  }
</style>
